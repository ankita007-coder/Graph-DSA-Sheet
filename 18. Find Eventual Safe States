class Solution(object):
    def eventualSafeNodes(self, graph):
        """
        :type graph: List[List[int]]
        :rtype: List[int]
        """
        n = len(graph)
        vis = [0]*n
        pathVis = [0]*n
        li=[]
        for i in range(n):
            if vis[i]==0:
                self.dfs(i,graph,vis,pathVis,li)
        li.sort() 
        return li


        
    def dfs(self,src,graph,vis,pathVis,li):
        vis[src]=1
        pathVis[src]=1

        for i in graph[src]:
            if vis[i]==0:
                if not self.dfs(i,graph,vis,pathVis,li):
                    return False
            elif pathVis[i]==1:
                return False
        
        pathVis[src]=0
        li.append(src)
        return True
