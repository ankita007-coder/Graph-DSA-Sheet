#User function Template for python3

import sys
from typing import List
sys.setrecursionlimit(10**8)
class Solution:
    def countDistinctIslands(self, grid : List[List[int]]) -> int:
        # code here
        drow = [0,0,-1,1]
        dcol = [1,-1,0,0]
        n = len(grid)
        m = len(grid[0])
        s = set()
        vis= [[0]*m for i in range(n)]
        for i in range(n):
            for j in range(m):
                li=[]
                if grid[i][j]==1 and vis[i][j]==0:
                    self.dfs(i,j,vis,grid,i,j,drow,dcol,li)
                    s.add(tuple(li))
        return len(s)
                    
    def dfs(self,row,col,vis,grid,row0,col0,drow,dcol,li):
        n = len(grid)
        m = len(grid[0])
        vis[row][col]=1
        li.append((row-row0,col-col0))
        for i in range(4):
            r = row+drow[i]
            c = col+dcol[i]
            if 0<=r<n and 0<=c<m and grid[r][c]==1 and vis[r][c]==0:
                self.dfs(r,c,vis,grid,row0,col0,drow,dcol,li)
        

#{ 
 # Driver Code Starts
#Initial Template for Python 3

if _name=="main_":
    for _ in range(int(input())):
        n,m=map(int,input().strip().split())
        grid=[]
        for i in range(n):
            grid.append([int(i) for i in input().strip().split()])
        obj=Solution()
        print(obj.countDistinctIslands(grid))
# } Driver Code Ends
