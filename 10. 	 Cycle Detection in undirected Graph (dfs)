from typing import List
class Solution:
    #Function to detect cycle in an undirected graph.
	def isCycle(self, V: int, adj: List[List[int]]) -> bool:
		#Code here\
		vis = [False]*(V)
		for i in range(V):
		    if not vis[i]:
		        if self.dfsDetection(i,-1,vis,adj):
		            return True
		            
	    return False

    def dfsDetection(self,node,parent,vis,adj):
        vis[node]=True
        
        for i in adj[node]:
            if not vis[i]:
                if self.dfsDetection(i,node,vis,adj):
                    return True
            elif i != parent:
                return True
        return False
