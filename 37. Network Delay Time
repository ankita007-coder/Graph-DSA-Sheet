import heapq
class Solution(object):
    def networkDelayTime(self, times, n, k):
        """
        :type times: List[List[int]]
        :type n: int
        :type k: int
        :rtype: int
        """
        adj = [[] for i in range(n+1)]
        for u,v,w in times:
            adj[u].append((v,w))

        dist = [float('inf')]*(n+1)
        dist[k]=0
        q=[]
        heapq.heappush(q,(0,k))

        while q:
            d,src = heapq.heappop(q)    
            for v,w in adj[src]:
                if dist[v]>w+d:
                    dist[v]=w+d
                    heapq.heappush(q,(dist[v],v))
        print(dist)
        for i in dist[1:]:
            if i==float('inf'):
                return -1
        return max(dist[1:])
